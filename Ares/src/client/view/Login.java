package client.view;

import client.view.adm.AdmMenu;
import client.view.operacao.OperacaoMenu;
import client.view.supervisao.SupervisaoMenu;
import controller.ControladorLogin;
import controller.SipConnector;
import data.APIAcess;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Alexandre Magalhães
 */
public class Login extends javax.swing.JFrame {
    private ControladorLogin log;
    private APIAcess api;
    private final String[] results = new String[6];
    /**
     * Creates new form Login
     */
    @SuppressWarnings("unchecked")
    public Login() {
        this.results[0] = "SOFTPHONE NAO ESTA CONECTADO";
        this.results[1] = "RAMAL NAO ENCONTRADO";
        this.results[2] = "RAMAL LOGADO COM SUCESSO";
        this.setLocationRelativeTo(null);
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ramal = new javax.swing.JTextField();
        senha = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ARES :: Teleconectividade");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Ramal:");
        jLabel1.setRequestFocusEnabled(false);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 50, 30));

        bLogin.setText("Entrar");
        bLogin.setToolTipText("Java>Delphi");
        bLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        bLogin.setBorderPainted(false);
        bLogin.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        bLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoginActionPerformed(evt);
            }
        });
        getContentPane().add(bLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 70, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Senha:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, 30));

        ramal.setToolTipText("");
        ramal.setAutoscrolls(false);
        ramal.setName("ramal"); // NOI18N
        ramal.setNextFocusableComponent(senha);
        ramal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ramalActionPerformed(evt);
            }
        });
        getContentPane().add(ramal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 130, -1));

        senha.setToolTipText("");
        senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senhaActionPerformed(evt);
            }
        });
        getContentPane().add(senha, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 130, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/client/resources/Teleconectividade.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -5, 280, 130));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
       
    private void errorDialog(int key){        
       JOptionPane.showMessageDialog(this, results[key], "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE);       
    }
    
    private void bLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoginActionPerformed
        api = APIAcess.getInstance();
        try {
            log = ControladorLogin.getInstance();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        boolean loop = true;
        int key = -1;
        while(loop){
            if(ramal.getText() == null || !ramal.getText().matches("[0-9]+")){
                JOptionPane.showMessageDialog(this, "Apenas números no ramal.", "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE);
                break;
            }
            if(log.getLogedIn(ramal.getText())){
                JOptionPane.showMessageDialog(this, "Ramal já logado!", "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE);
                this.dispose();
                System.exit(0);
                break;
            }
            SipConnector sip = new SipConnector(ramal.getText(), senha.getText());
            String[] userz = log.getNomeID(ramal.getText()).split(";");
            String tipo = userz[1];
            
            
            if(api.campAtiva() || ( (tipo.equalsIgnoreCase("1") || tipo.equalsIgnoreCase("4") ))){
                sip.Login();
                JOptionPane.showMessageDialog(this, "AGUARDE O TOTALIP ABRIR! \nCONTINUE APENAS QUANDO O TOTALIP ABRIR.\nCASO APAREÇA MENSAGEM DE ERRO DO TOTALIP IGNORAR!", "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE);
            }else{
                 JOptionPane.showMessageDialog(this, "ESPERE a campanha ser ativada para logar!", "ARES :: Teleconectividade", JOptionPane.INFORMATION_MESSAGE);
                 System.exit(0);
            } 
                       
            
            String statusRamal = api.login(ramal.getText());
            for(int i = 0; i < 5; i++) if(statusRamal.equalsIgnoreCase(results[i])) key = i;
            String[] user = log.getNomeID(ramal.getText()).split(";");
            
            switch(key){
            case 0:
                errorDialog(key);
                loop = false;
                break;
            case 1:
                errorDialog(key);
                loop = false;
                break;
            case 2:
                log.logIn(ramal.getText());
                String idtipo = user[1];
                if(idtipo.equals("1")){ //CPD                        
                        SupervisaoMenu menu = new SupervisaoMenu(user[0], ramal.getText());
                        //AdmMenu menu = new AdmMenu(user[0], ramal.getText());
                        //OperacaoMenu menu = new OperacaoMenu(user[0], ramal.getText());
                        menu.setVisible(true);
                        //menu1.setVisible(true);
                        this.setVisible(false);
                        loop = false;
                        break;
                }    
                if(idtipo.equals("4")){ //SUPERVISAO
                        SupervisaoMenu menu = new SupervisaoMenu(user[0], ramal.getText());
                        menu.setVisible(true);
                        this.setVisible(false);
                        loop = false;
                        break;
                }
                if(api.campAtiva()){
                    
                    if(idtipo.equals("2")){ //ADM - BRUNO/MARCELA -> IGOR
                        //URGENTE
                    }
                    if(idtipo.equals("3")){ //BACKOFFICE
                        
                    } 
                    if(idtipo.equals("5")){ //MONITORIA
                        
                    }
                    if(idtipo.equals("6")){ //OPERACAO
                        OperacaoMenu menu = new OperacaoMenu(user[0], ramal.getText());
                        menu.setVisible(true);
                        this.setVisible(false);
                        loop = false;
                        break;
                    }           
                   
                }
                else{
                JOptionPane.showMessageDialog(this, "ESPERE a campanha ser ativada para logar!", "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE); 
                loop = false;
                }                
                break;
            default:
                JOptionPane.showMessageDialog(this, "Consultar CPD!", "ARES :: Teleconectividade", JOptionPane.ERROR_MESSAGE);
                loop = false;
                break;
            }
            //loop = false;
       }

    }//GEN-LAST:event_bLoginActionPerformed

    private void ramalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ramalActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ramalActionPerformed

    private void senhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senhaActionPerformed
        // TODO add your handling code here:
        bLoginActionPerformed(evt);
    }//GEN-LAST:event_senhaActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Login().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField ramal;
    private javax.swing.JPasswordField senha;
    // End of variables declaration//GEN-END:variables
}
