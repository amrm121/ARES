/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view.supervisao;

import client.view.adm.*;
import data.DataBaseAcess;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.Plano;

/**
 *
 * @author Alexandre
 */
public class FaturamentoCrivoDia extends javax.swing.JFrame {
private DataBaseAcess dba;
    /**
     * Creates new form FaturamentoCrivoDia
     */
    public FaturamentoCrivoDia() {
    try {
        dba = DataBaseAcess.getInstance();
    } catch (SQLException ex) {
        Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(Level.SEVERE, null, ex);
    }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FaturamentoDia = new javax.swing.JTable();
        perfomancePA = new javax.swing.JToggleButton();
        planilhaCrivo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        FaturamentoDia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plano", "Crivadas", "Brutas", "Optou Dados", "% Crivo x Regi√£o"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FaturamentoDia.setRowMargin(2);
        jScrollPane1.setViewportView(FaturamentoDia);

        perfomancePA.setText("Visualizar performance PA");
        perfomancePA.setToolTipText("");
        perfomancePA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perfomancePAActionPerformed(evt);
            }
        });

        planilhaCrivo.setText("Gerar planilha");
        planilhaCrivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planilhaCrivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(perfomancePA)
                        .addGap(18, 18, 18)
                        .addComponent(planilhaCrivo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perfomancePA)
                    .addComponent(planilhaCrivo)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showFaturamento();
    }//GEN-LAST:event_formWindowOpened

    private void perfomancePAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perfomancePAActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_perfomancePAActionPerformed

    private void planilhaCrivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planilhaCrivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planilhaCrivoActionPerformed
    
    private void showFaturamento(){
        
        ArrayList<String> plano = new ArrayList<>();
        ArrayList<String> reglist = new ArrayList<>();
        String[] regf;
        Map<String, Double> valor = new HashMap<>();
        Map<String, String[][]> regc = new HashMap<>();
        Map<String, Plano> regb = new HashMap<>();
        Map<String, Integer> regiao = new HashMap<>();
        Map<String, Integer> regbruto = new HashMap<>();
        Map<String, Integer> dados = new HashMap<>();
        Map<String, Integer> crivo = new HashMap<>();
        Map<String, Integer> bruto = new HashMap<>();
        int ct = 0;
        String qry2 = "SELECT descricao, valor FROM plano";
    try {
        ResultSet rs = dba.execQry(qry2);
        while(rs.next()){
            bruto.put(rs.getString("descricao"), 0);
            crivo.put(rs.getString("descricao"), 0);
            plano.add(rs.getString("descricao"));
            dados.put(rs.getString("descricao"), 0);
            valor.put(rs.getString("descricao"), rs.getDouble("valor"));
            regc.put(rs.getString("descricao"), new String[reglist.size()][reglist.size()]);
        }
    } catch (SQLException ex) {
        Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(Level.SEVERE, null, ex);
    }   
       // regf = new String[plano.size()][reglist.size()];
        String qry3 = "SELECT regiao FROM regiaoVenda";
    try {
        ResultSet rs3 = dba.execQry(qry3);
        while(rs3.next()){
            reglist.add(rs3.getString("regiao"));
            
            regbruto.put(rs3.getString("regiao"), 0);
        }
    } catch (SQLException ex) {
        Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(Level.SEVERE, null, ex);
    }
        String qry = "SELECT ramal, planoEscolhido, statusCrivo, fidelizadaAno, optouAppsDataFree, regiaoVenda FROM vendas";
    try {
        ResultSet rs = dba.execQry(qry);
        String regiaoA;
        int ss = reglist.size();
        while(rs.next()){
            int ctreg = 0;
            String ramal, planoA, crivoA, fidelizado, dadosA;
            ramal = rs.getString("ramal");
            planoA = rs.getString("planoEscolhido");
            crivoA = rs.getString("statusCrivo");
            fidelizado = rs.getString("fidelizadaAno");
            dadosA = rs.getString("optouAppsDataFree");
            regiaoA = rs.getString("regiaoVenda");
            //System.out.println(planoA + "  " + crivoA);
            

            if(crivoA.equalsIgnoreCase("sim")){
                //System.out.println(planoA + "  " + crivoA);
                //crivo.replace(planoA, crivo.get(planoA), crivo.get(planoA)+1);
                //String aux[][] = regc.get(planoA);
                /*System.out.println(aux == null);
                for(int i = 0; i < reglist.size(); i++){
                    for(int j = 0; j < reglist.size(); j++){
                        if(j == 0){
                            aux[i][j] = reglist.get(i+1);
                        }else{
                            aux[i][j] = "0";
                        }
                    }
                }
                for(int i = 0 ; i < ss; i++){
                    for(int j = 0; j < ss; j++){
                        if(j == 0){
                            if(aux[i][j].equals(regiaoA)){
                                int q = Integer.parseInt(aux[i][j+1]);
                                aux[i][j+1] = ""+q++;
                            }
                        }
                        
                    }
                }*/

                //regc.replace(planoA, aux);
                //regiao.replace(regiaoA, regiao.get(regiaoA)+1);
                //regbruto.replace(regiaoA, regbruto.get(regiaoA)+1);
                crivo.replace(planoA, crivo.get(planoA)+1);
                bruto.replace(planoA, bruto.get(planoA)+1);
                
                if(dadosA.equalsIgnoreCase("1")){
                    dados.replace(planoA, dados.get(planoA)+1);
                }
            }else{
                bruto.replace(planoA, bruto.get(planoA)+1);
               // regbruto.replace(planoA, regbruto.get(regiaoA)+1);
            }
            
        }
         
        DefaultTableModel dm = (DefaultTableModel) FaturamentoDia.getModel();
        for(String z: plano){
            Object[] row = new Object[5]; //HashMaps por
            row[0] = z;
            row[1] = crivo.get(z);
            row[2] = bruto.get(z);
            row[3] = dados.get(z);
            String res = "";
            /*for(String reg: reglist){
                if(regbruto.get(reg) > 0){
                    System.out.println(z + " " + reg + " " +regiao.get(reg) + "  " +  regbruto.get(reg));
                    res += res + reg + ":" + (((double)regiao.get(reg)/(double)regbruto.get(reg))*100) + "% ";
                }
            }*/
            
            row[4] = res;
            dm.addRow(row);
        }
       
        FaturamentoDia.setModel(dm);
    } catch (SQLException ex) {
        Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FaturamentoCrivoDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FaturamentoCrivoDia().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FaturamentoDia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton perfomancePA;
    private javax.swing.JToggleButton planilhaCrivo;
    // End of variables declaration//GEN-END:variables
}
